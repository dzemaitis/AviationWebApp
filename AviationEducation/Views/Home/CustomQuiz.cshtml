@model List<Question>

@{
    ViewData["Title"] = "Custom Quiz";
}


@{
    //Make first question random from the Model from controller.
    Random rnd = new Random();
    int r = rnd.Next(Model.Count);
    Question currentQuestion = Model.ElementAt(r);
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Pick your quiz module. You can also make API request to get all question list</p>
    <form id="categories" class="text-capitalize"></form>
    <input type="button" id="start_button" class="btn btn-warning" onclick="Start(this)" value="Start Quiz" />
    <div id="quiz_div" style="display: none">
        <p id="question_text" class="lead font-weight-bold"></p>
        <p id="option1" onclick="Option_clicked(this)"></p>
        <p id="option2" onclick="Option_clicked(this)"></p>
        <p id="option3" onclick="Option_clicked(this)"></p>
        <p id="explanation" class="text-warning"></p>
        <input type="button" id="next_question_button" class="btn btn-warning" onclick="NextQuestion()" value="Next question" />
        <p id="score" class="mt-2">Score: 0/0</p>
    </div>
    <div class="codebox bg-secondary">
        <code class="text-light">
            <span>Web Api usage examples:</span><br />
            <span>Get full data in json format:</span><br />
            curl -get https://localhost:44381/api/json/<br />
            <span>Get question by id:</span><br />
            <span>/api/json/question/{id}</span><br />
            curl -get https://localhost:44381/api/json/question/5433 <br />
            <span>Get question by category:</span><br />
            /api/json/category/{category_name}<br />
            curl -get https://localhost:44381/api/json/category/arithmetics <br />
            <span>Get question by module:</span><br />
            /api/json/module/{module_name}<br />
            curl -get https://localhost:44381/api/json/module/mathematics <br />
        </code>
    </div>
</div>




@section Scripts
{

        <script type="text/javascript">

        //All questions from model
        var questions = @Html.Raw(Json.Serialize(Model));

        //ALl modules
        var modules = []
        for (let i of questions) {
            if (!modules.includes(i['module'])) {
                modules.push(i['module'])
            }
        }
        // Create HTML radio buttons from available modules
        var questionHtml = ""
            for (let i of modules) {
                var input = document.createElement("input");
                input.type = "radio"
                input.name = "module"
                input.innerHTML = i
                input.value = i
                questionHtml += input.outerHTML + " " + i + "<br>"
            }
            document.getElementById("categories").innerHTML = "<p>Please select the module you wish to learn:</p>" + questionHtml
        //Main variables and manipulated HTML elements
        var score = 0
        var total_questions_answered = 0
        var current_question
        var question_el = document.getElementById('question_text')
        var option1_el = document.getElementById('option1')
        var option2_el = document.getElementById('option2')
        var option3_el = document.getElementById('option3')
        var next_button_el = document.getElementById('next_question_button')
        var explanation_el = document.getElementById('explanation')

        //User selected custom quiz objects
        var selected_questions = [] //questions list for custom quiz
        var module_selector = document.querySelector('input[name="module"]:checked')

        // ********************** Start button *********************

        function Start(button) {
            //Add selected questions to list
            module_selector = document.querySelector('input[name="module"]:checked')
            if (module_selector == null) {
                alert("Pick a module")
            }
            else {
                selected_module = module_selector.value;

                for (let i of questions) {
                    if (i['module'] == selected_module) {
                        selected_questions.push(i)
                    }
                }
                //Hide and appear needed HTML
                document.getElementById('quiz_div').style.display = "inline";
                button.style.display = "none";
                document.getElementById("categories").style.display = "none"
                next_button_el.disabled = true;
                //Pick randonm question from selected_questions and put it into HTML
                current_question = selected_questions[Math.floor(Math.random() * selected_questions.length)];
                question_el.innerHTML = current_question['question_Text']
                option1_el.innerHTML = current_question['option1']
                option2_el.innerHTML = current_question['option2']
                option3_el.innerHTML = current_question['option3']
                //Re-start needed styles
                explanation_el.innerHTML = "";
                for (let i of [option1_el, option2_el, option3_el]) {
                    i.style.background = "";
                    i.style.cursor = "pointer";
                    i.style.pointerEvents = "auto";
                }
                //Display score
                document.getElementById('score').innerHTML = "Score: " + score + " /" + total_questions_answered
            }
        }

        //********************** Option click event *********************

            function Option_clicked(object) {
            next_button_el.disabled = false
            total_questions_answered += 1
            //Check if clicked option is correct 
            if (object.innerHTML == current_question['answer']) {
                score += 1
                object.style.background = "#009933";
            }
            else {
                for (let i of [option1_el, option2_el, option3_el]) {
                    if (i.innerHTML == current_question.answer) {
                        i.style.background = "#009933";
                    }
                }
            }
            for (let i of [option1_el, option2_el, option3_el]) {
                i.style.cursor = "default";
                i.style.pointerEvents = "none";
            }
            //Update score and add explanation HTML
            document.getElementById('score').innerHTML = "Score: " + score + " /" + total_questions_answered
            explanation_el.innerHTML = "Explanation: " + current_question['explanation']
            explanation_el.style.display = "block";
            //If it's last question buton text is Finish
            if (total_questions_answered == 10) {
                next_button_el.value = "Finish"
            }
        }

        //********************** Next Question button *********************

        function NextQuestion()
        {
            next_button_el.disabled = true;
            explanation_el.style.display = "none";
            //Restart html styles for questions
            for (let i of [option1_el, option2_el, option3_el]) {
                i.style.background = "";
                i.style.pointerEvents = "auto";
                i.style.cursor = "pointer";
            }
            //Pick new random question and update HTML
            current_question = selected_questions[Math.floor(Math.random() * selected_questions.length)];
            question_el.innerHTML = current_question['question_Text']
            option1_el.innerHTML = current_question['option1']
            option2_el.innerHTML = current_question['option2']
            option3_el.innerHTML = current_question['option3']

            if (total_questions_answered == 10) {
                //restart data 
                score = 0
                total_questions_answered = 0
                //hide/appear needed HTML
                document.getElementById('quiz_div').style.display = "none";
                document.getElementById('start_button').style.display = "inline";
                document.getElementById("categories").reset();
                document.getElementById("categories").style.display = "inline";
            }
        }
        </script>

}



